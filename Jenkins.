pipeline {
    agent any
    
    stages {
        stage('build app') {
            steps {
                script {
                    echo "building the application..."
                }
            }
        }
        stage('build image') {
            environment {
                IMAGE_NAME = "0.1" 
            }
            steps {
                script {
                    echo "building the docker image..."
                    withCredentials([usernamePassword(credentialsId: 'docker-hub', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh "docker build -t gbaderobusola/busola:${IMAGE_NAME} ."
                        sh "echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin"
                        sh "docker push gbaderobusola/busola:${IMAGE_NAME}"
                    }
                }
            }
        }
        stage('deploy') {
            steps {
                script {
                    echo 'deploying docker image to EC2...'
                    // Add your deployment steps here
                }
            }
        }
        stage('commit version update') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github-cred', passwordVariable: 'GITHUB_PASSWORD', usernameVariable: 'GITHUB_USERNAME')]) {
                        sh 'git config --global user.email "oguneye.lami@gmail.com"'
                        sh 'git config --global user.name "busolagbadero"'

                        // Create and switch to a new branch
                        sh 'git checkout -b feature/version-update'

                        // Perform any changes to files (e.g., version update)
                        // You can also include other necessary build steps here if needed

                        sh 'git add .'
                        sh 'git commit -m "ci: version bump"'

                        // Push the changes to the remote repository
                        sh 'git push origin feature/version-update'

                        // Switch back to the original branch (e.g., "master")
                        sh 'git checkout master'
                    }
                }
            }
        }
    }
}
